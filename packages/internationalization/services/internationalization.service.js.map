{"version":3,"sources":["services/internationalization.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,0CAA0C;AAC1C,2CAA4C;AAI5C,IAAa,2BAA2B,GAAxC;IAKI;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;IACnC,CAAC;IAKM,UAAU;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;IACjC,CAAC;IAKM,UAAU,CAAC,SAAgC;QAC9C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC9B,IAAI,QAAQ,CAAC,QAAQ,EAAE;gBACnB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;aAC7C;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAKM,SAAS,CAAC,MAAc;QAC3B,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,MAAM,EAAE;YACnC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAChC;IACL,CAAC;IAOM,SAAS,CAAC,MAAc,EAAE,SAAe;QAC5C,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAC9C,CAAC;CACJ,CAAA;AA7CY,2BAA2B;IADvC,mBAAU,EAAE;;GACA,2BAA2B,CA6CvC;AA7CY,kEAA2B","file":"internationalization.service.js","sourcesContent":["import * as Polyglot from \"node-polyglot\";\nimport { Injectable } from \"@nestjs/common\";\nimport { PhraseMetadata } from \"../metadatas\";\n\n@Injectable()\nexport class InternationalizationService {\n    private metadatas: Array<PhraseMetadata>;\n\n    private readonly polyglot: Polyglot;\n\n    constructor() {\n        this.polyglot = new Polyglot();\n    }\n\n    /**\n     * @returns { any }\n     */\n    public getPhrases(): any {\n        return this.polyglot.phrases;\n    }\n\n    /**\n     * @param { Array<PhraseMetadata> } metadatas\n     */\n    public initialize(metadatas: Array<PhraseMetadata>) {\n        this.metadatas = metadatas;\n        this.metadatas.forEach(metadata => {\n            if (metadata.callback) {\n                this.polyglot.extend(metadata.callback());\n            }\n        });\n    }\n\n    /**\n     * @param { string } locale\n     */\n    public setLocale(locale: string): void {\n        if (this.polyglot.locale() !== locale) {\n            this.polyglot.locale(locale);\n        }\n    }\n\n    /**\n     * @param { string } phrase\n     * @param variables\n     * @returns { string }\n     */\n    public translate(phrase: string, variables?: any): string {\n        return this.polyglot.t(phrase, variables);\n    }\n}\n"]}