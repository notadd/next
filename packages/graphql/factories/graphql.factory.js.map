{"version":3,"sources":["factories/graphql.factory.ts"],"names":[],"mappings":";;;;;;;;AAAA,yBAAyB;AACzB,6BAA6B;AAC7B,2CAA4C;AAC5C,iEAAmD;AACnD,6CAAiD;AAGjD,IAAa,cAAc,GAA3B,oBAA4B,SAAQ,wBAAc;IACtC,kBAAkB,CAAC,OAAe;QACtC,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEjC,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;IAC5D,CAAC;IAEM,mBAAmB,CAAC,YAA2B;QAClD,MAAM,KAAK,GAAG,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC;QAE5E,OAAO,kCAAU,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC/B,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACxD,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;CACJ,CAAA;AAdY,cAAc;IAD1B,mBAAU,EAAE;GACA,cAAc,CAc1B;AAdY,wCAAc","file":"graphql.factory.js","sourcesContent":["import * as fs from \"fs\";\nimport * as glob from \"glob\";\nimport { Injectable } from \"@nestjs/common\";\nimport { mergeTypes } from \"merge-graphql-schemas\";\nimport { GraphQLFactory } from \"@nestjs/graphql\";\n\n@Injectable()\nexport class GraphqlFactory extends GraphQLFactory {\n    private loadTypesFromFiles(pattern: string): Array<any> {\n        const paths = glob.sync(pattern);\n\n        return paths.map(path => fs.readFileSync(path, \"utf8\"));\n    }\n\n    public mergeTypesFromPaths(pathsToTypes: Array<string>): string {\n        const types = pathsToTypes.map(pattern => this.loadTypesFromFiles(pattern));\n\n        return mergeTypes(types.map(item => {\n            return Array.isArray(item) ? item.join(\"\\n\") : item;\n        }));\n    }\n}\n"]}