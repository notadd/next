{"version":3,"sources":["resolvers/dashboard.resolvers.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,6CAAkD;AAGlD,qEAAiE;AAGjE,IAAa,kBAAkB,GAA/B;IACI,YAA6B,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAC/D,CAAC;IASM,YAAY,CAAC,OAAO,EAAE,IAAsB;QAC/C,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzD,CAAC;IAMM,aAAa;QAChB,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC;IACjD,CAAC;CACJ,CAAA;AAXG;IADC,eAAK,EAAE;;;;sDAGP;AAMD;IADC,eAAK,EAAE;;;oCACgB,KAAK;uDAE5B;AArBQ,kBAAkB;IAD9B,kBAAQ,CAAC,WAAW,CAAC;qCAE6B,oCAAgB;GADtD,kBAAkB,CAsB9B;AAtBY,gDAAkB","file":"dashboard.resolvers.js","sourcesContent":["import { Query, Resolver } from \"@nestjs/graphql\";\n\nimport { Dashboard } from \"../interfaces\";\nimport { DashboardService } from \"../services/dashboard.service\";\n\n@Resolver(\"Dashboard\")\nexport class DashboardResolvers {\n    constructor(private readonly dashboardService: DashboardService) {\n    }\n\n    /**\n     * @param context\n     * @param args\n     *\n     * @returns { Dashboard | undefined }\n     */\n    @Query()\n    public getDashboard(context, args: { name: string }): Dashboard | undefined {\n        return this.dashboardService.getDashboard(args.name);\n    }\n\n    /**\n     * @returns { Array<Dashboard> }\n     */\n    @Query()\n    public getDashboards(): Array<Dashboard> {\n        return this.dashboardService.getDashboards();\n    }\n}\n"]}