{"version":3,"sources":["resolvers/extension.resolvers.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,6CAA4D;AAE5D,2CAA2C;AAC3C,yEAAqE;AAGrE,qEAAiE;AAGjE,IAAa,kBAAkB,GAA/B;IACI,YAA6B,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAC/D,CAAC;IAUM,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,IAAgC;QAC/D,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACnE,CAAC;IAUM,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,IAAsB;QACtD,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC;IAUM,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAgC;QACnE,OAAO,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACvE,CAAC;IAUM,KAAK,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAgC;QACrE,OAAO,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACzE,CAAC;CACJ,CAAA;AAvCG;IAFC,eAAK,EAAE;IACP,kBAAS,CAAC,sBAAS,CAAC;;;;sDAGpB;AAUD;IAFC,eAAK,EAAE;IACP,kBAAS,CAAC,sBAAS,CAAC;;;;uDAGpB;AAUD;IAFC,kBAAQ,EAAE;IACV,kBAAS,CAAC,sBAAS,CAAC;;;;0DAGpB;AAUD;IAFC,kBAAQ,EAAE;IACV,kBAAS,CAAC,sBAAS,CAAC;;;;4DAGpB;AAlDQ,kBAAkB;IAD9B,kBAAQ,CAAC,WAAW,CAAC;qCAE6B,oCAAgB;GADtD,kBAAkB,CAmD9B;AAnDY,gDAAkB","file":"extension.resolvers.js","sourcesContent":["import { Mutation, Query, Resolver } from \"@nestjs/graphql\";\nimport { Result } from \"@notadd/core/interfaces\";\nimport { UseGuards } from \"@nestjs/common\";\nimport { UserGuard } from \"@notadd/authentication/guards/user.guard\";\n\nimport { Extension } from \"../interfaces/extension.interfaces\";\nimport { ExtensionService } from \"../services/extension.service\";\n\n@Resolver(\"Extension\")\nexport class ExtensionResolvers {\n    constructor(private readonly extensionService: ExtensionService) {\n    }\n\n    /**\n     * @param context\n     * @param { {identification: string} } args\n     *\n     * @returns { Promise<Extension | undefined> }\n     */\n    @Query()\n    @UseGuards(UserGuard)\n    public async getExtension(context, args: { identification: string }): Promise<Extension | undefined> {\n        return this.extensionService.getExtension(args.identification);\n    }\n\n    /**\n     * @param context\n     * @param { {filters: any} } args\n     *\n     * @returns { Promise<Array<Extension>> }\n     */\n    @Query()\n    @UseGuards(UserGuard)\n    public async getExtensions(context, args: { filters: any }): Promise<Array<Extension>> {\n        return this.extensionService.getExtensions(args.filters);\n    }\n\n    /**\n     * @param context\n     * @param { {identification: string} } args\n     *\n     * @returns { Promise<Extension | undefined> }\n     */\n    @Mutation()\n    @UseGuards(UserGuard)\n    public async installExtension(context, args: { identification: string }): Promise<Result | undefined> {\n        return this.extensionService.installExtension(args.identification);\n    }\n\n    /**\n     * @param context\n     * @param { {identification: string} } args\n     *\n     * @returns { Promise<Extension | undefined> }\n     */\n    @Mutation()\n    @UseGuards(UserGuard)\n    public async uninstallExtension(context, args: { identification: string }): Promise<Result | undefined> {\n        return this.extensionService.uninstallExtension(args.identification);\n    }\n}\n"]}