{"version":3,"sources":["resolvers/page.resolvers.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,6CAAkD;AAGlD,2DAAuD;AAGvD,IAAa,aAAa,GAA1B;IAII,YAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IACrD,CAAC;IASM,OAAO,CAAC,OAAO,EAAE,IAAgC;QACpD,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACzD,CAAC;IAMM,QAAQ;QACX,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACvC,CAAC;CACJ,CAAA;AAXG;IADC,eAAK,EAAE;;;;4CAGP;AAMD;IADC,eAAK,EAAE;;;oCACW,KAAK;6CAEvB;AAxBQ,aAAa;IADzB,kBAAQ,CAAC,MAAM,CAAC;qCAK6B,0BAAW;GAJ5C,aAAa,CAyBzB;AAzBY,sCAAa","file":"page.resolvers.js","sourcesContent":["import { Query, Resolver } from \"@nestjs/graphql\";\n\nimport { Page } from \"../interfaces\";\nimport { PageService } from \"../services/page.service\";\n\n@Resolver(\"Page\")\nexport class PageResolvers {\n    /**\n     * @param { PageService } pageService\n     */\n    constructor(private readonly pageService: PageService) {\n    }\n\n    /**\n     * @param context\n     * @param { {identification: string} } args\n     *\n     * @returns {Page | undefined}\n     */\n    @Query()\n    public getPage(context, args: { identification: string }): Page | undefined {\n        return this.pageService.getPage(args.identification);\n    }\n\n    /**\n     * @returns { Array<Page> }\n     */\n    @Query()\n    public getPages(): Array<Page> {\n        return this.pageService.getPages();\n    }\n}\n"]}