{"version":3,"sources":["decorators/administration.decorator.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAG1B,wBAA+B,QAAiC;IAC5D,OAAO,CAAC,MAAW,EAAE,GAAI,EAAE,UAAW,EAAE,EAAE;QACtC,IAAI,UAAU,EAAE;YACZ,OAAO,CAAC,cAAc,CAAC,6BAA6B,EAAE,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;YAE7E,OAAO,UAAU,CAAC;SACrB;aAAM;YACH,IAAI,QAAQ,EAAE;gBACV,OAAO,CAAC,cAAc,CAAC,6BAA6B,EAAE,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;aAChF;iBAAM;gBACH,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;aAC9E;SACJ;IACL,CAAC,CAAC;AACN,CAAC;AAdD,wCAcC","file":"administration.decorator.js","sourcesContent":["import \"reflect-metadata\";\nimport { AdministrationMetadata } from \"../metadatas/administration.metadata\";\n\nexport function Administration(metadata?: AdministrationMetadata): ClassDecorator {\n    return (target: any, key?, descriptor?) => {\n        if (descriptor) {\n            Reflect.defineMetadata(\"__ADMINISTRATION_METADATA__\", key, descriptor.value);\n\n            return descriptor;\n        } else {\n            if (metadata) {\n                Reflect.defineMetadata(\"__ADMINISTRATION_METADATA__\", target.name, metadata);\n            } else {\n                throw new Error(\"While using decorator on a class, metadata must be set!\");\n            }\n        }\n    };\n}\n"]}