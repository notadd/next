{"version":3,"sources":["services/addon.service.ts"],"names":[],"mappings":"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","file":"addon.service.js","sourcesContent":["import { Injectable } from \"@nestjs/common\";\nimport { Result } from \"@notadd/core/interfaces\";\nimport { SettingService } from \"@notadd/setting/services/setting.service\";\nimport { join } from \"path\";\n\nimport { Addon } from \"../interfaces\";\nimport { AddonLoader } from \"../loaders\";\nimport { getPackagePathByAddon } from \"../utilities\";\nimport { SchemaBuilder } from \"../builders\";\n\n@Injectable()\nexport class AddonService {\n    protected loader: AddonLoader = new AddonLoader();\n\n    /**\n     * @param { SettingService } settingService\n     */\n    constructor(\n        private readonly settingService: SettingService,\n    ) {\n        this.loader.syncWithSetting(this.settingService);\n    }\n\n    /**\n     * @param { string } identification\n     *\n     * @returns { Promise<Addon | undefined> }\n     */\n    public async disableAddon(identification: string): Promise<Result | undefined> {\n        const addon: Addon | undefined = await this.getAddon(identification);\n        if (!addon) {\n            throw new Error(\"Addon do not exists!\");\n        }\n        await this.settingService.setSetting(`addon.${addon.identification}.enabled`, \"0\");\n        await this.loader.refresh().syncWithSetting(this.settingService);\n\n        return {\n            message: `Disable addon [${addon.identification}] successfully!`,\n        };\n    }\n\n    /**\n     * @param { string } identification\n     *\n     * @returns { Promise<Addon | undefined> }\n     */\n    public async enableAddon(identification: string): Promise<Result | undefined> {\n        const addon: Addon | undefined = await this.getAddon(identification);\n        if (!addon) {\n            throw new Error(\"Addon do not exists!\");\n        }\n        if (!await this.settingService.get<boolean>(`addon.${addon.identification}.installed`, false)) {\n            throw new Error(`Addon [${addon.identification}] is not installed!`);\n        }\n        await this.settingService.setSetting(`addon.${addon.identification}.enabled`, \"1\");\n        await this.loader.refresh().syncWithSetting(this.settingService);\n\n        return {\n            message: `Enable addon [${addon.identification}] successfully!`,\n        };\n    }\n\n    /**\n     * @param { string } identification\n     *\n     * @returns { Promise<Addon | undefined> }\n     */\n    public async getAddon(identification: string): Promise<Addon | undefined> {\n        return this.loader.addons.find((addon: Addon) => {\n            return addon.identification === identification;\n        });\n    }\n\n    /**\n     * @param filter\n     *\n     * @returns { Promise<Array<Addon>> }\n     */\n    public async getAddons(filter: { enabled?: boolean, installed?: boolean }): Promise<Array<Addon>> {\n        if (filter && typeof filter.enabled !== \"undefined\") {\n            if (filter.enabled) {\n                return this.loader.addons.filter(addon => {\n                    return addon.enabled === true;\n                });\n            } else {\n                return this.loader.addons.filter(addon => {\n                    return !addon.enabled;\n                });\n            }\n        } else if (filter && typeof filter.installed !== \"undefined\") {\n            if (filter.installed) {\n                return this.loader.addons.filter(addon => {\n                    return addon.installed === true;\n                });\n            } else {\n                return this.loader.addons.filter(addon => {\n                    return !addon.installed;\n                });\n            }\n        } else {\n            return this.loader.addons;\n        }\n    }\n\n    /**\n     * @param { string } identification\n     *\n     * @returns { Promise<Addon | undefined> }\n     */\n    public async installAddon(identification: string): Promise<Result | undefined> {\n        const addon: Addon | undefined = await this.getAddon(identification);\n        if (!addon) {\n            throw new Error(\"Addon do not exists!\");\n        }\n        if (await this.settingService.get<boolean>(`addon.${addon.identification}.installed`, false)) {\n            throw new Error(`Addon [${addon.identification}] has been installed!`);\n        }\n        await this.syncSchema(addon);\n        await this.settingService.setSetting(`addon.${addon.identification}.installed`, \"1\");\n        await this.loader.refresh().syncWithSetting(this.settingService);\n\n        return {\n            message: `Install addon [${addon.identification}] successfully!`,\n        };\n    }\n\n    /**\n     * @param { string } identification\n     *\n     * @returns { Promise<Addon | undefined> }\n     */\n    public async uninstallAddon(identification: string): Promise<Result | undefined> {\n        const addon: Addon | undefined = await this.getAddon(identification);\n        if (!addon) {\n            throw new Error(\"Addon do not exists!\");\n        }\n        if (!await this.settingService.get<boolean>(`addon.${addon.identification}.installed`, false)) {\n            throw new Error(`Addon [${addon.identification}] is not installed!`);\n        }\n        // await this.dropSchema(addon);\n        await this.settingService.setSetting(`addon.${addon.identification}.installed`, \"0\");\n        await this.loader.refresh().syncWithSetting(this.settingService);\n\n        return {\n            message: `Uninstall addon [${addon.identification}] successfully!`,\n        };\n    }\n\n    /**\n     * @param { Addon } addon\n     *\n     * @returns { Promise<void> }\n     */\n    protected async dropSchema(addon: Addon): Promise<void> {\n        const path = getPackagePathByAddon(addon);\n\n        if (path.length) {\n            const builder = new SchemaBuilder();\n            builder.buildMetadatas([\n                join(path, \"*/*.entity.js\"),\n                join(path, \"**/*.entity.js\"),\n            ]);\n            await builder.drop();\n        }\n    }\n\n    /**\n     * @param { Addon } addon\n     * @returns { Promise<void> }\n     */\n    protected async syncSchema(addon: Addon): Promise<void> {\n        const path = getPackagePathByAddon(addon);\n\n        if (path.length) {\n            const builder = new SchemaBuilder();\n            builder.buildMetadatas([\n                join(path, \"*/*.entity.js\"),\n                join(path, \"**/*.entity.js\"),\n            ]);\n            await builder.sync();\n        }\n    }\n}\n"]}