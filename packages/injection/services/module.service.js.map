{"version":3,"sources":["services/module.service.ts"],"names":[],"mappings":"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","file":"module.service.js","sourcesContent":["import { Injectable } from \"@nestjs/common\";\nimport { join } from \"path\";\nimport { Result } from \"@notadd/core/interfaces\";\nimport { SettingService } from \"@notadd/setting/services/setting.service\";\n\nimport { getPackagePathByModule } from \"../utilities/get-package-path-by-module\";\nimport { Module } from \"../interfaces/module.interface\";\nimport { ModuleLoader } from \"../loaders/module.loader\";\nimport { SchemaBuilder } from \"../builders/schema.builder\";\n\n@Injectable()\nexport class ModuleService {\n    protected loader: ModuleLoader = new ModuleLoader();\n\n    /**\n     * @param { SettingService } settingService\n     */\n    constructor(\n        private readonly settingService: SettingService,\n    ) {\n        this.loader.syncWithSetting(this.settingService);\n    }\n\n    /**\n     * @param { string } identification\n     *\n     * @returns { Promise<Module | undefined> }\n     */\n    public async disableModule(identification: string): Promise<Result | undefined> {\n        const module: Module | undefined = await this.getModule(identification);\n        if (!module) {\n            throw new Error(\"Module do not exists!\");\n        }\n        if (!await this.settingService.get<boolean>(`module.${module.identification}.installed`, false)) {\n            throw new Error(`Module [${module.identification}] is not installed!`);\n        }\n        await this.settingService.setSetting(`module.${module.identification}.enabled`, \"0\");\n        await this.loader.refresh().syncWithSetting(this.settingService);\n\n        return {\n            message: `Disable module [${module.identification}] successfully!`,\n        };\n    }\n\n    /**\n     * @param { string } identification\n     *\n     * @returns { Promise<Module | undefined> }\n     */\n    public async enableModule(identification: string): Promise<Result | undefined> {\n        const module: Module | undefined = await this.getModule(identification);\n        if (!module) {\n            throw new Error(\"Module do not exists!\");\n        }\n        if (!await this.settingService.get<boolean>(`module.${module.identification}.installed`, false)) {\n            throw new Error(`Module [${module.identification}] is not installed!`);\n        }\n        await this.settingService.setSetting(`module.${module.identification}.enabled`, \"1\");\n        await this.loader.refresh().syncWithSetting(this.settingService);\n\n        return {\n            message: `Enable module [${module.identification}] successfully!`,\n        };\n    }\n\n    /**\n     * @param { string } identification\n     *\n     * @returns { Promise<Module | undefined> }\n     */\n    public async getModule(identification: string): Promise<Module | undefined> {\n        return this.loader.modules.find((module: Module) => {\n            return module.identification === identification;\n        });\n    }\n\n    /**\n     * @param filter\n     *\n     * @returns { Promise<Array<Module>> }\n     */\n    public async getModules(filter: { installed?: boolean, enabled?: boolean }): Promise<Array<Module>> {\n        if (filter && typeof filter.installed !== \"undefined\") {\n            if (filter.installed) {\n                return this.loader.modules.filter(module => {\n                    return module.installed === true;\n                });\n            } else {\n                return this.loader.modules.filter(module => {\n                    return !module.installed;\n                });\n            }\n        } else if (filter && typeof filter.enabled !== \"undefined\") {\n            if (filter.enabled) {\n                return this.loader.modules.filter(module => {\n                    return module.installed === true && module.enabled === true;\n                });\n            } else {\n                return this.loader.modules.filter(module => {\n                    return module.installed === true && !module.enabled;\n                });\n            }\n        } else {\n            return this.loader.modules;\n        }\n    }\n\n    /**\n     * @param { string } identification\n     *\n     * @returns { Promise<Module | undefined> }\n     */\n    public async installModule(identification: string): Promise<Result | undefined> {\n        const module: Module | undefined = await this.getModule(identification);\n        if (!module) {\n            throw new Error(\"Module do not exists!\");\n        }\n        if (await this.settingService.get<boolean>(`module.${module.identification}.installed`, false)) {\n            throw new Error(`Module [${module.identification}] has been installed!`);\n        }\n        await this.syncSchema(module);\n        await this.settingService.setSetting(`module.${module.identification}.installed`, \"1\");\n        await this.loader.refresh().syncWithSetting(this.settingService);\n\n        return {\n            message: `Install module [${module.identification}] successfully!`,\n        };\n    }\n\n    /**\n     * @param { string } identification\n     *\n     * @returns { Promise<Module | undefined> }\n     */\n    public async uninstallModule(identification: string): Promise<Result | undefined> {\n        const module: Module | undefined = await this.getModule(identification);\n        if (!module) {\n            throw new Error(\"Module do not exists!\");\n        }\n        if (!await this.settingService.get<boolean>(`module.${module.identification}.installed`, false)) {\n            throw new Error(`Module [${module.identification}] is not installed!`);\n        }\n        // await this.dropSchema(module);\n        await this.settingService.setSetting(`module.${module.identification}.installed`, \"0\");\n        await this.loader.refresh().syncWithSetting(this.settingService);\n\n        return {\n            message: `Uninstall module [${module.identification}] successfully!`,\n        };\n    }\n\n    /**\n     * @param { Module } module\n     *\n     * @returns { Promise<void> }\n     */\n    protected async dropSchema(module: Module): Promise<void> {\n        const path = getPackagePathByModule(module);\n\n        if (path.length) {\n            const builder = new SchemaBuilder();\n            builder.buildMetadatas([\n                join(path, \"*/*.entity.js\"),\n                join(path, \"**/*.entity.js\"),\n            ]);\n            await builder.drop();\n        }\n    }\n\n    /**\n     * @param { Module } module\n     *\n     * @returns { Promise<void> }\n     */\n    protected async syncSchema(module: Module): Promise<void> {\n        const path = getPackagePathByModule(module);\n\n        if (path.length) {\n            const builder = new SchemaBuilder();\n            builder.buildMetadatas([\n                join(path, \"*/*.entity.js\"),\n                join(path, \"**/*.entity.js\"),\n            ]);\n            await builder.sync();\n        }\n    }\n}\n"]}