{"version":3,"sources":["services/page.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,2CAA4C;AAC5C,8EAA0E;AAM1E,IAAa,WAAW,GAAxB;IAQI,YAA6B,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAPnD,gBAAW,GAAG,KAAK,CAAC;QAEpB,UAAK,GAAgB,EAAE,CAAC;IAMhC,CAAC;IAOM,OAAO,CAAC,cAAsB;QACjC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC1B,OAAO,IAAI,CAAC,cAAc,KAAK,cAAc,CAAC;QAClD,CAAC,CAAC,CAAC;IACP,CAAC;IAKM,QAAQ;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAKM,UAAU,CAAC,SAA8B;QAC5C,IAAI,CAAC,KAAK,GAAG,SAAS;aACjB,MAAM,CAAC,QAAQ,CAAC,EAAE;YACf,OAAO,QAAQ,CAAC,IAAI;mBACb,QAAQ,CAAC,cAAc;mBACvB,QAAQ,CAAC,IAAI;mBACb,QAAQ,CAAC,MAAM,CAAC;QAC3B,CAAC,CAAC;aACD,GAAG,CAAC,QAAQ,CAAC,EAAE;YACZ,OAAO;gBACH,WAAW,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;gBAC7D,IAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE;gBAC7E,cAAc,EAAE,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;gBACtE,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gBACxC,MAAM,EAAE,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE;aACxF,CAAC;QACN,CAAC,CAAC,CAAC;QACP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;CACJ,CAAA;AAnDY,WAAW;IADvB,mBAAU,EAAE;qCASoC,gCAAc;GARlD,WAAW,CAmDvB;AAnDY,kCAAW","file":"page.service.js","sourcesContent":["import { Injectable } from \"@nestjs/common\";\nimport { SettingService } from \"@notadd/setting/services/setting.service\";\n\nimport { PageMetadata } from \"../metadatas/page.metadata\";\nimport { Page } from \"../interfaces/page.interface\";\n\n@Injectable()\nexport class PageService {\n    private initialized = false;\n\n    private pages: Array<Page> = [];\n\n    /**\n     * @param { SettingService } settingService\n     */\n    constructor(private readonly settingService: SettingService) {\n    }\n\n    /**\n     * @param { string } identification\n     *\n     * @returns { Page | undefined }\n     */\n    public getPage(identification: string): Page | undefined {\n        return this.pages.find(page => {\n            return page.identification === identification;\n        });\n    }\n\n    /**\n     * @returns { Array<Page> }\n     */\n    public getPages(): Array<Page> {\n        return this.pages;\n    }\n\n    /**\n     * @param { Array<PageMetadata> } metadatas\n     */\n    public initialize(metadatas: Array<PageMetadata>) {\n        this.pages = metadatas\n            .filter(metadata => {\n                return metadata.form\n                    && metadata.identification\n                    && metadata.name\n                    && metadata.schema;\n            })\n            .map(metadata => {\n                return {\n                    description: metadata.description ? metadata.description : \"\",\n                    form: metadata.form && metadata.form.callback ? metadata.form.callback() : [],\n                    identification: metadata.identification ? metadata.identification : \"\",\n                    name: metadata.name ? metadata.name : \"\",\n                    schema: metadata.schema && metadata.schema.callback ? metadata.schema.callback() : {},\n                };\n            });\n        this.initialized = true;\n    }\n}\n"]}