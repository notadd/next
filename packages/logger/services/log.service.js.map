{"version":3,"sources":["services/log.service.ts"],"names":[],"mappings":"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","file":"log.service.js","sourcesContent":["import * as clc from \"cli-color\";\nimport * as os from \"os\";\nimport { appendFileSync } from \"fs\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Log } from \"../entities\";\nimport { NestEnvironment } from \"@nestjs/common/enums/nest-environment.enum\";\nimport { Repository } from \"typeorm\";\nimport { Configuration } from \"@notadd/core/loaders\";\n\n@Injectable()\nexport class LogService {\n    private static prevTimestamp = Date.now();\n\n    private static contextEnv = NestEnvironment.RUN;\n\n    private static readonly yellow = clc.xterm(3);\n\n    /**\n     * @param { Repository<Log> } repository\n     */\n    constructor(\n        @InjectRepository(Log)\n        private readonly repository: Repository<Log>,\n    ) {\n    }\n\n    /**\n     * @returns { Promise<Array<Log>> }\n     */\n    public async getLogs(): Promise<Array<Log>> {\n        return this.repository.find();\n    }\n\n    /**\n     * @param { Number } id\n     *\n     * @returns { Promise<Log> }\n     */\n    public async getLogById(id: number): Promise<Log | undefined> {\n        return this.repository\n            .createQueryBuilder()\n            .where(\"id = :id\", {\n                id,\n            })\n            .getOne();\n    }\n\n    static log(message: string, context = \"\", isTimeDiffEnabled = true) {\n        this.printMessage(message, clc.green, context, isTimeDiffEnabled);\n    }\n\n    static error(\n        message: string,\n        trace = \"\",\n        context = \"\",\n        isTimeDiffEnabled = true,\n    ) {\n        this.printMessage(message, clc.red, context, isTimeDiffEnabled);\n        this.printStackTrace(trace);\n    }\n\n    static warn(message: string, context = \"\", isTimeDiffEnabled = true) {\n        this.printMessage(message, clc.yellow, context, isTimeDiffEnabled);\n    }\n\n    private static printMessage(\n        message: string,\n        color: (msg: string) => string,\n        context = \"\",\n        isTimeDiffEnabled?: boolean,\n    ) {\n        if (LogService.contextEnv === NestEnvironment.TEST) {\n            return;\n        }\n\n        const configuration = Configuration.loadApplicationConfiguration();\n        const date = new Date(Date.now());\n        const file = `${process.cwd()}/storages/logs/${date.toLocaleDateString(configuration.timezone)}.log`;\n        const text = `[Notadd] ${process.pid}   - ${date.toLocaleString(configuration.timezone)}   [${context}] ${message}${os.EOL}`;\n        appendFileSync(file, text);\n\n        process.stdout.write(color(`[Notadd] ${process.pid}   - `));\n        process.stdout.write(`${date.toLocaleString()}   `);\n        process.stdout.write(this.yellow(`[${context}] `));\n        process.stdout.write(color(message));\n\n        this.printTimestamp(isTimeDiffEnabled);\n        process.stdout.write(`\\n`);\n    }\n\n    private static printTimestamp(isTimeDiffEnabled?: boolean) {\n        const includeTimestamp = LogService.prevTimestamp && isTimeDiffEnabled;\n        if (includeTimestamp) {\n            process.stdout.write(\n                this.yellow(` +${Date.now() - LogService.prevTimestamp}ms`),\n            );\n        }\n        LogService.prevTimestamp = Date.now();\n    }\n\n    private static printStackTrace(trace: string) {\n        if (this.contextEnv === NestEnvironment.TEST || !trace) {\n            return;\n        }\n\n        process.stdout.write(trace);\n        process.stdout.write(`\\n`);\n    }\n}\n"]}