{"version":3,"sources":["server.ts"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["import \"reflect-metadata\";\nimport * as express from \"express\";\nimport * as ip from \"ip\";\nimport { ApplicationModule } from \"./modules\";\nimport { Configuration } from \"@notadd/core/loaders\";\nimport { DocumentBuilder, SwaggerModule } from \"@nestjs/swagger\";\nimport { INestApplication } from \"@nestjs/common/interfaces/nest-application.interface\";\nimport { Logger, ValidationPipe } from \"@nestjs/common\";\nimport { LogService } from \"@notadd/logger/services\";\nimport { NotaddFactory } from \"@notadd/core\";\nimport { FastifyAdapter } from \"@nestjs/core\";\n\nexport class ServerStarter {\n    /**\n     * @type { INestApplication }\n     */\n    protected instance: INestApplication;\n\n    /**\n     * @type { Logger }\n     */\n    protected logger = new Logger(\"NotaddFactory\", true);\n\n    public check() {\n        let result = true;\n        if (!Configuration.existsApplicationConfiguration()) {\n            this.logger.error(\"Application configuration do not exists!\");\n            this.logger.warn(\"Your version of Notadd has expired. Application aborted!\");\n            result = false;\n        }\n        if (!Configuration.existsDatabaseConfiguration()) {\n            this.logger.error(\"Database configuration do not exists!\");\n            this.logger.warn(\"Please usg command: [yarn run:install] to finish installation. Application aborted!\");\n            result = false;\n        }\n        if (!Configuration.existsServerConfiguration()) {\n            this.logger.error(\"Your version of Notadd has expired. Application aborted!\");\n            result = false;\n        }\n        if (!Configuration.existsSwaggerConfiguration()) {\n            this.logger.error(\"Your version of Notadd has expired. Application aborted!\");\n            result = false;\n        }\n        if (!result) {\n            this.logger.error(\"Application environmental detection with error!\");\n            process.exit(1);\n        }\n    }\n\n    async start() {\n        this.check();\n\n        const graphqlConfiguration = Configuration.loadGraphqlConfiguration();\n        const serverConfiguration = Configuration.loadServerConfiguration();\n        const swaggerConfiguration = Configuration.loadSwaggerConfiguration();\n\n        let index = process.argv.indexOf(\"--port\");\n        const port = index > -1\n            ? parseInt(process.argv[ index + 1 ])\n            : serverConfiguration.http.port ? serverConfiguration.http.port : 3000;\n        index = process.argv.indexOf(\"--host\");\n        const host = index > -1\n            ?\n            process.argv[ index + 1 ]\n            :\n            serverConfiguration.http.host\n                ? (\n                    serverConfiguration.http.host === \"*\"\n                        ? ip.address()\n                        : serverConfiguration.http.host\n                )\n                :\n                ip.address();\n        const address = `http://${host}:${port}`;\n\n        const adapter = new FastifyAdapter();\n\n        const application = await NotaddFactory.start(ApplicationModule, adapter, {\n            bodyParser: true,\n            cors: true,\n            logger: LogService,\n        });\n        application.use(express.static(process.cwd() + \"/public/\"));\n        application.useGlobalPipes(new ValidationPipe());\n\n        if (swaggerConfiguration.enable) {\n            const options = new DocumentBuilder()\n                .setTitle(\"Notadd\")\n                .setDescription(\"API document for Notadd.\")\n                .setVersion(\"2.0\")\n                .addBearerAuth()\n                .build();\n\n            const document = SwaggerModule.createDocument(application, options);\n\n            SwaggerModule.setup(`/${swaggerConfiguration.endpoint}`, application, document);\n        }\n        const callback = () => {\n            if (graphqlConfiguration.ide.enable) {\n                this.logger.log(`Graphql IDE Server on: ${address}/graphiql`);\n            }\n            if (swaggerConfiguration.enable) {\n                this.logger.log(`Swagger Server on: ${address}/${swaggerConfiguration.endpoint}`);\n            }\n            this.logger.log(`Server on: ${address}`);\n        };\n\n        index = process.argv.indexOf(\"--host\");\n\n        if (index > -1) {\n            await application.listen(port, process.argv[ index + 1 ], callback);\n        } else if (serverConfiguration.http.host && serverConfiguration.http.host !== \"*\") {\n            await application.listen(port, serverConfiguration.http.host, callback);\n        } else {\n            await application.listen(port, callback);\n        }\n    }\n}\n"]}